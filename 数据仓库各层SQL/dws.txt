--1.存电动模式单次行程汇总
--建表
drop table if exists dws_electricity_single_trip_detail;
create external table dws_electricity_single_trip_detail
(
    `id`                    string comment '行程id',
    `vin`                   string comment '汽车唯一编码',
    `start_timestamp`       bigint comment '开始时间',
    `end_timestamp`         bigint comment '结束时间',
    `start_mileage`         int comment '开始里程',
    `end_mileage`           int comment '结束里程',
    `start_soc`             int comment '行程开始soc, 单位：0.1%',
    `end_soc`               int comment '行程结束soc, 单位：0.1%',
    `avg_speed`             decimal(16, 2) comment '平均时速',
    `car_avg_voltage`       decimal(16, 2) comment '汽车平均电压',
    `car_avg_electric_current`       decimal(16, 2) comment '汽车平均电流',
    `battery_avg_max_temperature`       decimal(16, 2) comment '电池组最高温度的平均温度',
    `battery_mid_max_temperature`       decimal(16, 2) comment '电池组最高温度的中位数',
    `battery_avg_min_temperature`       decimal(16, 2) comment '电池组最低温度的平均温度',
    `battery_mid_min_temperature`       decimal(16, 2) comment '电池组最低温度的中位数',
    `battery_avg_max_voltage`           decimal(16, 2) comment '电池组最高电压的平均电压',
    `battery_mid_max_voltage`           decimal(16, 2) comment '电池组最高电压的中位数',
    `battery_avg_min_voltage`           decimal(16, 2) comment '电池组最低电压的平均电压',
    `battery_mid_min_voltage`           decimal(16, 2) comment '电池组最低电压的中位数'
) comment '单次行程汇总表'
    partitioned by (`dt` string comment '统计日期')
    stored as orc
    location '/warehouse/car_data/dws/dws_electricity_single_trip_detail'
    tblproperties ('orc.compress' = 'snappy');



--加载数据（首次，重点）
insert overwrite table dws_electricity_single_trip_detail partition (dt)
select
    concat(vin,'-',min(`timestamp`)) id,     --行程id（字符串）
    vin,
    min(`timestamp`) start_timestamp,
    max(`timestamp`)`end_timestamp`,
    min(mileage) `start_mileage`,
    max(mileage)`end_mileage`,
    max(soc) `start_soc`,
    min(soc) `end_soc`,
    avg(velocity) `avg_speed`,
    avg(voltage) `car_avg_voltage`,
    avg(electric_current) `car_avg_electric_current`,
    avg(max_temperature) `battery_avg_max_temperature`,
    collect_list(max_temperature)[cast(count(*)/2 as int)]  `battery_mid_max_temperature`,
    avg(min_temperature) `battery_avg_min_temperature`,
    collect_list(min_temperature)[cast(count(*)/2 as int)]` battery_mid_min_temperature`,
    avg(max_voltage) `battery_avg_max_voltage`,
    collect_list(max_voltage)[cast(count(*)/2 as int)]` battery_mid_max_voltage`,
    avg(min_voltage) `battery_avg_min_voltage`,
    collect_list(min_voltage)[cast(count(*)/2 as int)] `battery_mid_min_voltage`,
    dt
from (
     select
        vin,
        velocity,
        mileage,
        voltage,
        electric_current,
        soc,
        max_temperature,
        max_voltage,
        min_temperature,
        min_voltage,
        `timestamp`,
        dt,
        sum(mark)over (partition by vin order by `timestamp`) singer_trip
    from (
         select
            vin,
            velocity,
            mileage,
            voltage,
            electric_current,
            soc,
            max_temperature,
            max_voltage,
            min_temperature,
            min_voltage,
            `timestamp`,
            dt,
            if((lag(`timestamp`,1,0)over (partition by vin order by `timestamp` ) - `timestamp`) < -60000,1,0) mark
        from dwd_car_running_electricity_inc
        where dt<='2023-07-27'
    )t1
)t2
group by dt,vin,singer_trip;


select * from dws_electricity_single_trip_detail;

--每日装载，改下面两个地方即可
--insert overwrite table dws_electricity_single_trip_detail partition (dt='2023-05-03')
--   where dt='2023-05-03'


--单次充电记录汇总表
--建表：
drop table if exists dws_single_charge_detail_inc;
create external table dws_single_charge_detail_inc
(
    `id`                    string comment '充电id',
    `vin`                   string comment '汽车唯一编码',
    `start_timestamp`       bigint comment '开始时间',
    `end_timestamp`         bigint comment '结束时间',
    `start_soc`             int comment '充电开始soc, 单位：0.1%',
    `end_soc`               int comment '充电结束soc, 单位：0.1%',
    `max_total_voltage`     int comment '总电压MAX',
    `min_total_voltage`     int comment '总电压MIN',
    `avg_total_voltage`     decimal(16, 2) comment '总电压AVG',
    `max_current`           int comment '总电流MAX',
    `min_current`           int comment '总电流MIN',
    `avg_current`           decimal(16, 2) comment '总电流AVG',
    `battery_avg_max_temperature`       decimal(16, 2) comment '电池组最高温度的平均温度',
    `battery_mid_max_temperature`       decimal(16, 2) comment '电池组最高温度的中位数',
    `battery_avg_min_temperature`       decimal(16, 2) comment '电池组最低温度的平均温度',
    `battery_mid_min_temperature`       decimal(16, 2) comment '电池组最低温度的中位数',
    `battery_avg_max_voltage`           decimal(16, 2) comment '电池组最高电压的平均电压',
    `battery_mid_max_voltage`           decimal(16, 2) comment '电池组最高电压的中位数',
    `battery_avg_min_voltage`           decimal(16, 2) comment '电池组最低电压的平均电压',
    `battery_mid_min_voltage`           decimal(16, 2) comment '电池组最低电压的中位数'
) comment '单次充电汇总表'
    partitioned by (`dt` string comment '统计日期')
    stored as orc
    location '/warehouse/car_data/dws/dws_single_charge_detail_inc'
    tblproperties ('orc.compress' = 'snappy');


--首次加载
insert overwrite table dws_single_charge_detail_inc partition (dt)
select
    concat(vin,'-',min(`timestamp`)) id,
    vin,
    min(`timestamp`) start_timestamp,
    max(`timestamp`)`end_timestamp`,
    max(soc) `start_soc`,
    min(soc) `end_soc`,
    max(voltage) `max_total_voltage`,
    min(voltage) `min_total_voltage`,
    avg(voltage) `avg_total_voltage`,
    max(electric_current) `max_current`,
    min(electric_current) `min_current`,
    avg(electric_current) `avg_current`,
    avg(max_temperature) `battery_avg_max_temperature`,
    collect_list(max_temperature)[cast(count(*)/2 as int)]  `battery_mid_max_temperature`,
    avg(min_temperature) `battery_avg_min_temperature`,
    collect_list(min_temperature)[cast(count(*)/2 as int)]` battery_mid_min_temperature`,
    avg(max_voltage) `battery_avg_max_voltage`,
    collect_list(max_voltage)[cast(count(*)/2 as int)]` battery_mid_max_voltage`,
    avg(min_voltage) `battery_avg_min_voltage`,
    collect_list(min_voltage)[cast(count(*)/2 as int)] `battery_mid_min_voltage`,
    dt
from (
     select
        vin,
        voltage,
        electric_current,
        soc,
        max_temperature,
        max_voltage,
        min_temperature,
        min_voltage,
        `timestamp`,
        dt,
        sum(mark)over (partition by vin order by `timestamp`) singer_trip
    from (
         select
            vin,
            voltage,
            electric_current,
            soc,
            max_temperature,
            max_voltage,
            min_temperature,
            min_voltage,
            `timestamp`,
            dt,
            if((lag(`timestamp`,1,0)over (partition by vin order by `timestamp` ) - `timestamp`) < -60000,1,0) mark
        from dwd_car_parking_charging_inc
        where dt<='2023-07-27'
    )t1
)t2
group by dt,vin,singer_trip;

--每日装载只有细微的变化

select * from dws_single_charge_detail_inc;



--每日行程情况表
--建表：
drop table if exists dws_car_mileage_1d;
create table dws_car_mileage_1d
(
vin           string comment '汽车唯一ID',
    total_mileage int comment '一日累计里程',
    total_speed   int comment '平均时速分子',         --每行速度之和
    running_count int comment '平均时速分母',         --每个速度不为0的行数和。两者相除可得速度
    danger_count  int comment '单日急加减速次数'       --上下速度差不大于500
)
    comment '汽车行程单日累计表'
    partitioned by (`dt` string comment '统计日期')
    stored as orc
    location '/warehouse/car_data/dws/dws_car_mileage_1d'
    tblproperties ('orc.compress' = 'snappy');


--加载数据（首次）
insert overwrite table dws_car_mileage_1d partition (dt)
select
    vin,
    max(mileage)-min(mileage) total_mileage,
    sum(velocity) total_speed,
    sum(`if`(velocity>0,1,0)) running_count,
    sum(`if`(dif_vel>500 or dif_vel<-500,1,0)) danger_count,
    dt
from (
     select
        vin,
        mileage,
        velocity,
        `timestamp`,
        velocity -  lag(velocity,1,velocity)over (partition by  dt,vin order by `timestamp`) dif_vel,
        dt
    from dwd_car_running_electricity_inc
    where dt <= '2023-07-27'
)t1
group by dt,vin;


select * from dws_car_mileage_1d;


--单日汽车报警表
--建表
drop table if exists dws_car_alarm_1d;
create table dws_car_alarm_1d
(
    vin           string comment '汽车唯一ID',
    alarm_count    int comment '告警次数',
    l1_alarm_count int comment '一级告警次数',
    l2_alarm_count int comment '二级告警次数',
    l3_alarm_count int comment '三级告警次数'
)
    comment '汽车告警单日累计表'
    partitioned by (`dt` string comment '统计日期')
    stored as orc
    location '/warehouse/car_data/dws/dws_car_alarm_1d'
    tblproperties ('orc.compress' = 'snappy');


--数据加载（首次）
insert into dws_car_alarm_1d partition (dt)
select vin,
       count(*),
       sum(if(alarm_level = 1, 1, 0)),
       sum(if(alarm_level = 2, 1, 0)),
       sum(if(alarm_level = 3, 1, 0)),
       dt
from dwd_car_alarm_inc
where dt<='2023-07-27'
group by vin,dt;

select * from dws_car_alarm_1d;


--每日电机信息汇总表
--建表
drop table if exists dws_car_motor_1d;
create table dws_car_motor_1d
(
    vin                                string comment '汽车唯一ID',
    max_motor_temperature              int comment '电机最高温度',
    avg_motor_temperature              decimal(16, 2) comment '电机平均温度',
    max_motor_controller_temperature   int comment '电机控制器最高温度',
    avg_motor_controller_temperature   decimal(16, 2) comment '电机控制器平均温度'
)
    comment '汽车电机单日累计表'
    partitioned by (`dt` string comment '统计日期')
    stored as orc
    location '/warehouse/car_data/dws/dws_car_motor_1d'
    tblproperties ('orc.compress' = 'snappy');

--首次加载
insert overwrite table dws_car_motor_1d partition (dt)
select
    vin,
    max(temperature) max_motor_temperature,
    avg(temperature) avg_motor_temperature,
    max(controller_temperature) max_motor_controller_temperature,
    avg(controller_temperature) avg_motor_controller_temperature,
    dt
from dwd_car_motor_inc
where dt<='2023-07-27'
group by dt,vin;

select * from dws_car_motor_1d;


--单日汽车电池组使用情况表
--建表
drop table if exists dws_car_battery_1d;
create table dws_car_battery_1d
(
    vin                                string comment '汽车唯一ID',
    max_battery_temperature            int comment '最高电池温度',
    battery_temperature_abnormal_count int comment '电池温度异常值次数',
    avg_voltage_charge                 decimal(16, 2) comment '充电平均电压',
    avg_voltage_discharge              decimal(16, 2) comment '放电平均电压',
    soc_consumed                       int comment '每日累计soc消耗'
)
    comment '汽车电池单日累计表'
    partitioned by (`dt` string comment '统计日期')
    stored as orc
    location '/warehouse/car_data/dws/dws_car_battery_1d'
    tblproperties ('orc.compress' = 'snappy');

--首次加载
with t1 as (
    select
        vin,
        max(max_temperature) max_battery_temperature ,
        sum(if(max_temperature > 600,1,0))  battery_temperature_abnormal_count,
        avg(voltage) avg_voltage_discharge ,
        dt
    from dwd_car_running_electricity_inc
    where dt<='2023-07-27'
    group by vin,dt
),t2 as (
    select
        vin,
        max(max_temperature) max_battery_temperature ,
        sum(if(max_temperature > 600,1,0))  battery_temperature_abnormal_count,
        avg(voltage) avg_voltage_charge ,
        dt
    from dwd_car_parking_charging_inc
    where dt<='2023-07-27'
    group by vin,dt
),t3 as (
    select
        vin,
        sum(start_soc-end_soc)  soc_consumed,
        dt
    from dws_electricity_single_trip_detail
    where dt<='2023-07-27'
    group by vin,dt
)
insert overwrite table dws_car_battery_1d partition(dt)
select
    nvl(t1.vin,t2.vin),
    if( nvl(t1.max_battery_temperature,0)>nvl(t2.max_battery_temperature,0),nvl(t1.max_battery_temperature,0),nvl(t2.max_battery_temperature,0) ) max_battery_temperature ,
    nvl(t1.battery_temperature_abnormal_count,0) + nvl(t2.battery_temperature_abnormal_count,0) battery_temperature_abnormal_count,
    nvl(avg_voltage_charge,0) avg_voltage_charge,
    nvl(avg_voltage_discharge,0) avg_voltage_discharge,
    nvl(soc_consumed,0) soc_consumed,
    nvl(t1.dt,t2.dt)
from t1
full outer join t2
on t1.vin=t2.vin and t1.dt=t2.vin
left join t3
on t1.vin=t3.vin and t1.dt=t3.dt;

select * from dws_car_battery_1d;





